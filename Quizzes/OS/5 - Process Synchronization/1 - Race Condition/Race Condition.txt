MSQ: Process Synchronization must fulfill what conditions?
A) Mutual Exclusion
B) Critical Section
C) Progress
D) Bounded Waiting
Answer: A,C,D
Explanation: These are facts bro learn them.

MSQ: What are some problems that may occur without synchronization?
A) Deadlock
B) Inconsistency
C) Preemption
D) Loss of Data
Answerw: A,B,D
Explanation: If processes are not synchronized then they will end up in deadlock have inconsistent communication which would result in inconsistent data or even loss of data.

MCQ: Race condition is an undesirable condition in which the final result of the concurrent processes depends on ?
A) Deadlock
B) Process Synchronization
C) Sequence of Concurrent Processes
D) Atomicity
Answer: C
Explanation: 

MCQ: What causes race condition?
A) Lack of process synchronization
B) Deadlock
C) Inconsistency in data
D) Concurrent execution of processes
Answer: A
Explanation: The race condition occurs due to lack of process synchronization, as the final result of the execution of these processes is dependent on the order of their execution.

NAT: Can race condition occur if the processes are atomic? (True/False)
Answer: True
Explanation: Race condition can occur because even if the processes are atomic, the order of their execution is still not defined, which can lead to inconsistencies.

MCQ: How can you find the maximum value of a variable after running some processes concurrently?
A) By executing the processes which add to the value at the end
B) By locking the variable before each process updates it
C) By using a semaphore to control access
D) By reading the variable at the start and not allowing any updates
Answer: A
Explanation: If you execute the processes that add to the variable at the very end, the final value written will be the maximum.

MCQ: How can you find the distinct values after running n concurrent processes?
A) Find the impact of n processes, then n-1 processes, n-2 processes, and so on, until you are left with a single process.
​B) Only consider the first and last process.
C) Average the results of all processes.
D) Take the result from a randomly selected process.
​Answer: A
​Explanation: When we run concurrent processes, they can run in any order. Hence, we have to find the effect of each of the processes combined and individually.

MCQ: How many distinct values can you obtain in a synchronized execution of processes?
A) 8
B) 4
C) 1
D) 2
​Answer: C
​Explanation: When you run processes in a synchronized fashion, the processes always run one at a time.

MCQ: Which section of the processes need to be synchronized?
A) Entry Section
B) Remainder Section
C) Critical Section
D) Exit Section
​Answer: C
​Explanation: Critical section is a code segment where the shared variables can be accessed. That is, communication between processes happens over resource.

MCQ: How can you find the minimum value of a variable after running concurrent processes?
A) By executing the processes that subtract from the variable at the end.
B) By locking the variable during updates.
C) By executing all processes simultaneously.
D) By using a separate thread to continuously monitor the variable.
Answer: A
Explanation: To ensure the minimum value is maintained, you should execute the processes that subtract from the variable at the end, as this way the final value will be the lowest.

MCQ: Which type of processes need to be synchronized?
A) Running Processes
B) Operating Processes
C) Independent Processes
D) Cooperating/Communicating Processes
​Answer: D
​Explanation: Since the processes are communicating with each other, they need to be synchronized.

MCQ: What best defines mutual exclusion?
A) Only one process out of all processes involved in communication can execute its critical section.
B) All processes must execute their critical sections simultaneously.
C) Processes can execute their critical sections in any order.
D) A process must finish all instructions within the critical section.
​Answer: A
​Explanation: Mutual exclusion is a property of process synchronization that prevents multiple threads or processes from accessing shared resources simultaneously. It is the most important part of concurrency control, as it ensures that only one process can access the critical section at a time.

NAT: If one process is preempted during the execution of its critical section, can another process execute its critical section? (Yes/No)
​Answer: No
​Explanation: Due to the property of mutual exclusion, only one process is allowed to execute its critical section, even if it is preempted.

MSQ: What best defines the conditions of progress?
A) When no process is executing its critical section and a process requests to execute its critical section, it is allowed.
B) When two processes simultaneously request to execute the critical section, one of them is allowed.
C) When both processes request to execute the critical section, both are denied.
D) If no one is executing its critical section and a process requests, it is denied.
​Answer: A,B
​Explanation: Progress is defined as the property by which a single process should be allowed to execute its critical section if nobody is executing, or if both processes want to execute their critical section, then one of them should be allowed to execute.

MSQ: What conditions best define Bounded waiting?
A) Allowing processes to execute indefinitely.
B) Bounding waiting time of processes.
C) Only allowing processes to execute for a fixed number of times.
D) Preventing processes from entering their critical sections.
​Answer: B,C
​Explanation: Bounded waiting means that there exists a bound on the number of times that other processes are allowed to enter their critical sections after a process has made a request to enter its critical section and before that request is granted. Options B and C satisfy this condition.

MCQ: In what way should you test the conditions for a solution for process synchronization?
A) Test Individually
B) Combine and test
C) Test randomly
D) Test in parallel
Answer: A
Explanation: Progress, bounded waiting, and mutual exclusion are distinct properties that must be tested individually to ensure the solution for process synchronization is correct.
